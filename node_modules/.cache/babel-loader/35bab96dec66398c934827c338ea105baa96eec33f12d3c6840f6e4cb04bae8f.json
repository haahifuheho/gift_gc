{"ast":null,"code":"var _jsxFileName = \"/home/ookusa/app/gift_gc/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport GiftNFT from \"./contracts/GiftNFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const giftNFT = async () => {\n    try {\n      const tx = await contract.methods.giftNFT(recipient, message).send({\n        from: defaultAccount\n      });\n      const event = tx.events[0];\n      const newTokenId = event.args[2].toNumber();\n      setTokenId(newTokenId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    const init = async () => {\n      const web3 = new Web3(window.ethereum);\n      const accounts = await web3.eth.requestAccounts();\n      const defaultAccount = accounts[0];\n      const contractAddress = \"0xaed8166414dc429365e56e3b873c1d651879d154\"; // コントラクトアドレスを入力\n      const contract = new web3.eth.Contract(GiftNFT.abi, contractAddress, {\n        from: defaultAccount\n      });\n      const giftNFT = async () => {\n        try {\n          const tx = await contract.methods.giftNFT(recipient, message).send({\n            from: defaultAccount\n          });\n          const event = tx.events[0];\n          const newTokenId = event.args[2].toNumber();\n          setTokenId(newTokenId);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n    };\n    init();\n  }, [message, recipient]); // 依存するステートの配列\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gift NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Recipient:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => giftNFT(),\n      children: \"Gift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), tokenId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gifted NFT with Token ID: \", tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Message: \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recipient: \", recipient]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XmaFnIHFC9hbHaIAVJGOJ6CUGWI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","GiftNFT","jsxDEV","_jsxDEV","App","_s","message","setMessage","recipient","setRecipient","tokenId","setTokenId","giftNFT","tx","contract","methods","send","from","defaultAccount","event","events","newTokenId","args","toNumber","error","console","init","web3","window","ethereum","accounts","eth","requestAccounts","contractAddress","Contract","abi","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/home/ookusa/app/gift_gc/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport GiftNFT from \"./contracts/GiftNFT.json\";\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const giftNFT = async () => {\n  try {\n    const tx = await contract.methods.giftNFT(recipient, message).send({ from: defaultAccount });\n    const event = tx.events[0];\n    const newTokenId = event.args[2].toNumber();\n    setTokenId(newTokenId);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n  useEffect(() => {\n    const init = async () => {\n      const web3 = new Web3(window.ethereum);\n      const accounts = await web3.eth.requestAccounts();\n      const defaultAccount = accounts[0];\n\n      const contractAddress = \"0xaed8166414dc429365e56e3b873c1d651879d154\"; // コントラクトアドレスを入力\n      const contract = new web3.eth.Contract(GiftNFT.abi, contractAddress, { from: defaultAccount });\n\n      const giftNFT = async () => {\n        try {\n          const tx = await contract.methods.giftNFT(recipient, message).send({ from: defaultAccount });\n          const event = tx.events[0];\n          const newTokenId = event.args[2].toNumber();\n          setTokenId(newTokenId);\n        } catch (error) {\n          console.error(error);\n        }\n      };\n    }\n    init();\n  }, [message, recipient]); // 依存するステートの配列\n\n  return (\n    <div>\n      <h1>Gift NFT</h1>\n      <label>\n        Message:\n        <input type=\"text\" onChange={(e) => setMessage(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Recipient:\n        <input type=\"text\" onChange={(e) => setRecipient(e.target.value)} />\n      </label>\n      <br />\n      <button onClick={() => giftNFT()}>Gift</button>\n      {tokenId && (\n        <div>\n          <p>Gifted NFT with Token ID: {tokenId}</p>\n          <p>Message: {message}</p>\n          <p>Recipient: {recipient}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
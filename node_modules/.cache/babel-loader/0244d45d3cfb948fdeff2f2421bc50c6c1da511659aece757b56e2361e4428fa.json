{"ast":null,"code":"var _jsxFileName = \"/home/ookusa/app/gift_gc/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { providers } from \"ethers\";\nimport GiftNFT from \"./contracts/GiftNFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n  const contractAddress = \"0xaed8166414dc429365e56e3b873c1d651879d154\"; // コントラクトアドレスを入力\n\n  const giftNFT = async () => {\n    const contract = new ethers.Contract(contractAddress, GiftNFT.abi, signer);\n    const tx = await contract.giftNFT(recipient, message);\n    await tx.wait();\n    const event = tx.events[0];\n    const newTokenId = event.args[2].toNumber();\n    setTokenId(newTokenId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gift NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Recipient:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: giftNFT,\n      children: \"Gift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), tokenId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gifted NFT with Token ID: \", tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Message: \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recipient: \", recipient]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZbfFOeIqJsXArKQ3c8dHEoZM85s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ethers","providers","GiftNFT","jsxDEV","_jsxDEV","App","_s","message","setMessage","recipient","setRecipient","tokenId","setTokenId","provider","Web3Provider","window","ethereum","signer","getSigner","contractAddress","giftNFT","contract","Contract","abi","tx","wait","event","events","newTokenId","args","toNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/home/ookusa/app/gift_gc/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { providers } from \"ethers\";\nimport GiftNFT from \"./contracts/GiftNFT.json\";\n\nfunction App() {\n  const [message, setMessage] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n\n  const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const signer = provider.getSigner();\n\n  const contractAddress = \"0xaed8166414dc429365e56e3b873c1d651879d154\"; // コントラクトアドレスを入力\n\n  const giftNFT = async () => {\n    const contract = new ethers.Contract(contractAddress, GiftNFT.abi, signer);\n    const tx = await contract.giftNFT(recipient, message);\n    await tx.wait();\n    const event = tx.events[0];\n    const newTokenId = event.args[2].toNumber();\n    setTokenId(newTokenId);\n  };\n\n  return (\n    <div>\n      <h1>Gift NFT</h1>\n      <label>\n        Message:\n        <input type=\"text\" onChange={(e) => setMessage(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Recipient:\n        <input type=\"text\" onChange={(e) => setRecipient(e.target.value)} />\n      </label>\n      <br />\n      <button onClick={giftNFT}>Gift</button>\n      {tokenId && (\n        <div>\n          <p>Gifted NFT with Token ID: {tokenId}</p>\n          <p>Message: {message}</p>\n          <p>Recipient: {recipient}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
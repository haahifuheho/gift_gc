{"ast":null,"code":"var _jsxFileName = \"/home/mikami/GitLocal/gift_gc/src/Viewer.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport abi from \"./contracts/GiftNFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Viewer() {\n  _s();\n  const [address, setAddress] = useState();\n  const [tokenId, setTokenId] = useState();\n  const [collection, setCollection] = useState(\"-\");\n  const [contract, setContract] = useState(null);\n  const [web3, setWeb3] = useState(null);\n  const getCollection = async () => {\n    const contractAddress = \"0x4AAbbb31f44941eFAd14f019Efe876916b57a293\";\n    const contract = new web3.eth.Contract(abi, contractAddress);\n    const message = await contract.methods.tokenMessage(tokenId).call();\n    setCollection(message);\n    const tran = contract.getTransaction();\n    console.log(\"FINISH\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NFT\\u78BA\\u8A8D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"NFTAddress:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        value: address,\n        onChange: e => setAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 6\n      }, this), \"TokenId:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"tokenId\",\n        value: tokenId,\n        onChange: e => setTokenId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"getColection\",\n        onClick: getCollection,\n        children: \"GetCollection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 6\n      }, this), \"Collection:\", collection]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Viewer, \"f0atINAcdqdj725BwpG9gePE8lM=\");\n_c = Viewer;\n;\nexport default Viewer;\nvar _c;\n$RefreshReg$(_c, \"Viewer\");","map":{"version":3,"names":["useState","useEffect","Web3","abi","jsxDEV","_jsxDEV","Viewer","_s","address","setAddress","tokenId","setTokenId","collection","setCollection","contract","setContract","web3","setWeb3","getCollection","contractAddress","eth","Contract","message","methods","tokenMessage","call","tran","getTransaction","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value","onChange","e","target","id","onClick","_c","$RefreshReg$"],"sources":["/home/mikami/GitLocal/gift_gc/src/Viewer.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport abi from \"./contracts/GiftNFT.json\";\n\nfunction Viewer() {\n    const [address, setAddress] = useState();\n    const [tokenId, setTokenId] = useState();\n    const [collection, setCollection] = useState(\"-\");\n    const [contract, setContract] = useState(null);\n    const [web3, setWeb3] = useState(null);\n\n    const getCollection = async () => {\n        const contractAddress = \"0x4AAbbb31f44941eFAd14f019Efe876916b57a293\";\n        const contract = new web3.eth.Contract(abi, contractAddress);\n        const message = await contract.methods.tokenMessage(tokenId).call();\n\tsetCollection(message);\n\tconst tran = contract.getTransaction();\n\tconsole.log(\"FINISH\");\n    }\n    \nreturn(\n    <div>\n        <h1>NFT確認</h1>\n        <div>\n            <h2>Account</h2>\n\t</div>\n        <div>\n            NFTAddress:<input type=\"text\" name=\"address\" value={address} onChange={(e) => setAddress(e.target.value)} />\n\t    <br/>\n            TokenId:<input type=\"text\" name=\"tokenId\" value={tokenId} onChange={(e) => setTokenId(e.target.value)} />\n\t    <br/>\n            <button id=\"getColection\" onClick={getCollection} >GetCollection</button>\n\t    <br/>\n            Collection:{collection}\n        </div>\n    </div>\n    );\n};\n\nexport default Viewer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
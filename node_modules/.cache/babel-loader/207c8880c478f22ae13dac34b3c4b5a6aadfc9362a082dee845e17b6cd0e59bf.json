{"ast":null,"code":"var _jsxFileName = \"/home/ookusa/app/gift_gc/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport GiftNFT from \"./contracts/GiftNFT.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [recipient, setRecipient] = useState(\"\");\n  const [tokenId, setTokenId] = useState(\"\");\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState(null);\n  const [contract, setContract] = useState(null);\n  useEffect(() => {\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        try {\n          const web3 = new Web3(window.ethereum);\n          await window.ethereum.enable();\n          const accounts = await web3.eth.getAccounts();\n          setWeb3(web3);\n          setAccounts(accounts);\n        } catch (error) {\n          console.error(error);\n        }\n      } else {\n        console.error(\"Please install MetaMask!\");\n      }\n    };\n    initWeb3();\n  }, []);\n  useEffect(() => {\n    const initContract = async () => {\n      const contractAddress = \"0xaed8166414dc429365e56e3b873c1d651879d154\"; // コントラクトアドレスを入力\n      const contract = new Web3.eth.Contract(GiftNFT.abi, contractAddress);\n      setContract(contract);\n    };\n    if (web3) {\n      initContract();\n    }\n  }, [web3]);\n  const giftNFT = async () => {\n    try {\n      const tx = await contract.methods.giftNFT(recipient, message).send({\n        from: accounts[0]\n      });\n      const event = tx.events[0];\n      const newTokenId = event.args[2].toNumber();\n      setTokenId(newTokenId);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Gift NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Message:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Recipient:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setRecipient(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: giftNFT,\n      children: \"Gift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 1\n    }, this), tokenId && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gifted NFT with Token ID: \", tokenId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Message: \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Recipient: \", recipient]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 1\n  }, this);\n}\n_s(App, \"H8guYbTb1j9x83GiDerj4Ao/Hsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Web3","GiftNFT","jsxDEV","_jsxDEV","App","_s","message","setMessage","recipient","setRecipient","tokenId","setTokenId","web3","setWeb3","accounts","setAccounts","contract","setContract","initWeb3","window","ethereum","enable","eth","getAccounts","error","console","initContract","contractAddress","Contract","abi","giftNFT","tx","methods","send","from","event","events","newTokenId","args","toNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","_c","$RefreshReg$"],"sources":["/home/ookusa/app/gift_gc/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from 'web3';\nimport GiftNFT from \"./contracts/GiftNFT.json\";\n\nfunction App() {\n    const [message, setMessage] = useState(\"\");\n    const [recipient, setRecipient] = useState(\"\");\n    const [tokenId, setTokenId] = useState(\"\");\n\n    const [web3, setWeb3] = useState(null);\n    const [accounts, setAccounts] = useState(null);\n    const [contract, setContract] = useState(null);\n\nuseEffect(() => {\nconst initWeb3 = async () => {\nif (window.ethereum) {\ntry {\nconst web3 = new Web3(window.ethereum);\nawait window.ethereum.enable();\nconst accounts = await web3.eth.getAccounts();\nsetWeb3(web3);\nsetAccounts(accounts);\n} catch (error) {\nconsole.error(error);\n}\n} else {\nconsole.error(\"Please install MetaMask!\");\n}\n};\ninitWeb3();\n}, []);\n\nuseEffect(() => {\nconst initContract = async () => {\nconst contractAddress = \"0xaed8166414dc429365e56e3b873c1d651879d154\"; // コントラクトアドレスを入力\nconst contract = new Web3.eth.Contract(GiftNFT.abi, contractAddress);\nsetContract(contract);\n};\nif (web3) {\ninitContract();\n}\n}, [web3]);\n\nconst giftNFT = async () => {\ntry {\nconst tx = await contract.methods.giftNFT(recipient, message).send({ from: accounts[0] });\nconst event = tx.events[0];\nconst newTokenId = event.args[2].toNumber();\nsetTokenId(newTokenId);\n} catch (error) {\nconsole.error(error);\n}\n};\n\nreturn (\n<div>\n<h1>Gift NFT</h1>\n<label>\nMessage:\n<input type=\"text\" onChange={(e) => setMessage(e.target.value)} />\n</label>\n<br />\n<label>\nRecipient:\n<input type=\"text\" onChange={(e) => setRecipient(e.target.value)} />\n</label>\n<br />\n<button onClick={giftNFT}>Gift</button>\n{tokenId && (\n<div>\n<p>Gifted NFT with Token ID: {tokenId}</p>\n<p>Message: {message}</p>\n<p>Recipient: {recipient}</p>\n</div>\n)}\n</div>\n);\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}